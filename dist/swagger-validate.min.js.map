{"version":3,"file":"swagger-validate.min.js","sources":["c:\\Users\\ozan\\code\\swagger-validate\\node_modules\\boilerplate-gulp\\node_modules\\browserify\\node_modules\\browser-pack\\_prelude.js","c:/Users/ozan/code/swagger-validate/src/errorTypes.js","c:/Users/ozan/code/swagger-validate/src/index.js","c:/Users/ozan/code/swagger-validate/src/validateArray.js","c:/Users/ozan/code/swagger-validate/src/validateDataType.js","c:/Users/ozan/code/swagger-validate/src/validateModel.js","c:/Users/ozan/code/swagger-validate/src/validateOperation.js","c:/Users/ozan/code/swagger-validate/src/validatePrimitiveTypes.js"],"names":[],"mappings":"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","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\r\n\r\nfunction DataTypeValidationError(message){\r\n  this.name = 'DataTypeValidationError';\r\n  this.message = message || 'Invalid data type';\r\n}\r\nDataTypeValidationError.prototype = Object.create(Error.prototype);\r\nDataTypeValidationError.prototype.constructor = DataTypeValidationError;\r\nexports.DataTypeValidationError = DataTypeValidationError;\r\n\r\nfunction NotAnIntegerError(value){\r\n  this.name = 'NotAnIntegerError';\r\n  this.message = '\"' + value + '\" is not an integer';\r\n  this.value = value;\r\n}\r\nNotAnIntegerError.prototype = Object.create(DataTypeValidationError.prototype);\r\nNotAnIntegerError.prototype.constructor = NotAnIntegerError;\r\nexports.NotAnIntegerError = NotAnIntegerError;\r\n\r\nfunction NotANumberError(value, actualType){\r\n  this.name = 'NotANumberError';\r\n  this.message = '\"' + value + '\" is not a number';\r\n  if(actualType) this.message += ' (got a ' + actualType + ' instead)';\r\n\r\n  this.value = value;\r\n}\r\nNotANumberError.prototype = Object.create(DataTypeValidationError.prototype);\r\nNotANumberError.prototype.constructor = NotANumberError;\r\nexports.NotANumberError = NotANumberError;\r\n\r\nfunction NumberTooLargeError(value, max){\r\n  this.name = 'NumberTooLargeError';\r\n  this.message = '\"' + value + '\" is above the maximum of ' + max.toString();\r\n  this.value = value;\r\n}\r\nNumberTooLargeError.prototype = Object.create(DataTypeValidationError.prototype);\r\nNumberTooLargeError.prototype.constructor = NumberTooLargeError;\r\nexports.NumberTooLargeError = NumberTooLargeError;\r\n\r\nfunction NumberTooSmallError(value, max){\r\n  this.name = 'NumberTooSmallError';\r\n  this.message = '\"' + value + '\" is above the maximum of ' + max.toString();\r\n  this.value = value;\r\n}\r\nNumberTooSmallError.prototype = Object.create(DataTypeValidationError.prototype);\r\nNumberTooSmallError.prototype.constructor = NumberTooSmallError;\r\nexports.NumberTooSmallError = NumberTooSmallError;\r\n\r\nfunction NotABooleanError(value, actualType){\r\n  this.name = 'NotABooleanError';\r\n  this.message = '\"' + value + '\" is not a boolean';\r\n  if(actualType) this.message += ' (got a ' + actualType + ' instead)';\r\n\r\n  this.value = value;\r\n}\r\nNotABooleanError.prototype = Object.create(DataTypeValidationError.prototype);\r\nNotABooleanError.prototype.constructor = NotABooleanError;\r\nexports.NotABooleanError = NotABooleanError;\r\n\r\nfunction NotAnArrayError(value, actualType){\r\n  this.name = 'NotAnArrayError';\r\n  this.message = '\"' + value + '\" is not an array';\r\n  if(actualType) this.message += ' (got a ' + actualType + ' instead)';\r\n\r\n  this.value = value;\r\n}\r\nNotAnArrayError.prototype = Object.create(DataTypeValidationError.prototype);\r\nNotAnArrayError.prototype.constructor = NotAnArrayError;\r\nexports.NotAnArrayError = NotAnArrayError;\r\n\r\nfunction DuplicateInSetError(arr, dupes){\r\n  this.name = 'DuplicateInSetError';\r\n  this.message = 'Duplicates (\"' + dupes.join('\", \"') + '\") found in set: [\"' + arr.join('\", \"') + '\"';\r\n  this.dupes = dupes;\r\n  this.value = arr;\r\n}\r\nDuplicateInSetError.prototype = Object.create(DataTypeValidationError.prototype);\r\nDuplicateInSetError.prototype.constructor = DuplicateInSetError;\r\nexports.DuplicateInSetError = DuplicateInSetError;\r\n\r\nfunction NotVoidError(value, actualType){\r\n  this.name = 'NotVoidError';\r\n  this.message = '\"' + value + '\" is not null or undefined';\r\n  if(actualType) this.message += ' (got a ' + actualType + ' instead)';\r\n\r\n  this.value = value;\r\n}\r\nNotVoidError.prototype = Object.create(DataTypeValidationError.prototype);\r\nNotVoidError.prototype.constructor = NotVoidError;\r\nexports.NotVoidError = NotVoidError;\r\n\r\nfunction NotAStringError(value, actualType){\r\n  this.name = 'NotAStringError';\r\n  this.message = '\"' + value + '\" is not a string';\r\n  if(actualType) this.message += ' (got a ' + actualType + ' instead)';\r\n\r\n  this.value = value;\r\n}\r\nNotAStringError.prototype = Object.create(DataTypeValidationError.prototype);\r\nNotAStringError.prototype.constructor = NotAStringError;\r\nexports.NotAStringError = NotAStringError;\r\n\r\nfunction StringNotInEnumError(value, acceptableValues){\r\n  this.name = 'StringNotInEnumError';\r\n  this.message = '\"' + value + '\" is not an acceptable value: \"' + acceptableValues.join('\", \"') + '\"';\r\n \r\n  this.value = value;\r\n}\r\nStringNotInEnumError.prototype = Object.create(DataTypeValidationError.prototype);\r\nStringNotInEnumError.prototype.constructor = StringNotInEnumError;\r\nexports.StringNotInEnumError = StringNotInEnumError;\r\n\r\n\r\nfunction ErrorsInArrayElementsError(errors){\r\n  this.name = 'ErrorsInArrayElementsError';\r\n  this.message = 'Errors in array elements:\\n\\t' + errors.join(',\\n\\t');\r\n  this.errors = errors;\r\n}\r\nErrorsInArrayElementsError.prototype = Object.create(DataTypeValidationError.prototype);\r\nErrorsInArrayElementsError.prototype.constructor = ErrorsInArrayElementsError;\r\nexports.ErrorsInArrayElementsError = ErrorsInArrayElementsError;\r\n\r\nfunction MissingValueError(){\r\n  this.name = 'MissingValueError';\r\n  \r\n  this.message = 'This value is required but missing';\r\n}\r\nMissingValueError.prototype = Object.create(DataTypeValidationError.prototype);\r\nMissingValueError.prototype.constructor = MissingValueError;\r\nexports.MissingValueError = MissingValueError;\r\n\r\nfunction ValidationError(specName, spec, error){\r\n  this.name = 'ValidationError';\r\n  this.specName = specName;\r\n  this.spec = spec;\r\n  this.error = error;\r\n\r\n  this.message = specName + ' is invalid: ' + error.message;\r\n}\r\nValidationError.prototype = Object.create(DataTypeValidationError.prototype);\r\nValidationError.prototype.constructor = ValidationError;\r\nexports.ValidationError = ValidationError;\r\n\r\nfunction ValidationErrors(value, specName, spec, errors){\r\n  this.name = 'ValidationErrors';\r\n\r\n  this.value = value;\r\n  this.specName = specName;\r\n  this.spec = spec;\r\n  this.errors = errors || [];\r\n\r\n  this.message = specName + ' is invalid';\r\n\r\n  if(this.errors.length){\r\n    this.message += ':\\n\\t' + this.errors.map(function(e){ return e.message; }).join('\\n\\t');\r\n  }\r\n}\r\nValidationErrors.prototype = Object.create(DataTypeValidationError.prototype);\r\nValidationErrors.prototype.constructor = ValidationErrors;\r\nexports.ValidationErrors = ValidationErrors;\r\n","exports.dataType = require('./validateDataType');\r\nexports.model = require('./validateModel');\r\nexports.operation = require('./validateOperation');\r\nexports.array = require('./validateArray');\r\nexports.errors = require('./errorTypes');\r\n\r\nvar primitives = require('./validatePrimitiveTypes');\r\nexports.primitive = {\r\n  integer: primitives.validateInteger,\r\n  number: primitives.validateNumber,\r\n  string: primitives.validateString,\r\n  boolean: primitives.validateBoolean,\r\n  void: primitives.validateVoid,\r\n  file: primitives.validateFile\r\n};\r\n","'use strict';\r\n\r\nvar errorTypes = require('./errorTypes'),\r\n  validate = require('./index');\r\n\r\nfunction validateArray(candidate, dataType, models){\r\n  if(!Array.isArray(candidate)){\r\n    return new errorTypes.NotAnArrayError(candidate, typeof candidate);\r\n  }\r\n\r\n  var items = dataType.items;\r\n\r\n  if(dataType.uniqueItems){\r\n    var dupeCheck = [];\r\n    var dupes = candidate.filter(function(value){\r\n      var signature;\r\n      if(items.$ref){\r\n        signature = JSON.stringify(value);\r\n      } else {\r\n        signature = value;\r\n      }\r\n      if(dupeCheck.indexOf(signature) !== -1){\r\n        return true;\r\n      } else {\r\n        dupeCheck.push(signature);\r\n        return false;\r\n      }\r\n    });\r\n\r\n    if(dupes.length) {\r\n      return new errorTypes.DuplicateInSetError(candidate, dupes);\r\n    }\r\n  }\r\n\r\n  var errors;\r\n\r\n  if(items.$ref){\r\n    var model = models[items.$ref];\r\n    errors = candidate.filter(function(value){\r\n      return validate.model(value, model, models);\r\n    });\r\n  } else {\r\n    errors = candidate.filter(function(value){\r\n      return validate.dataType(value, items, models);\r\n    });\r\n  }\r\n\r\n  if(errors.length){\r\n    return new errorTypes.ErrorsInArrayElementsError(errors);\r\n  }\r\n}\r\nmodule.exports = validateArray;","'use strict';\r\n\r\nvar validate = require('./index');\r\n  \r\nfunction validateDataType(candidate, dataType, models){\r\n  models = models || {};\r\n      \r\n  var type = dataType.type || dataType.dataType || dataType.$ref;\r\n\r\n  switch(type){\r\n    case 'integer':\r\n      return validate.primitive.integer(candidate, dataType);\r\n    case 'number':\r\n      return validate.primitive.number(candidate, dataType);\r\n    case 'string':\r\n      return validate.primitive.string(candidate, dataType);\r\n    case 'boolean':\r\n      return validate.primitive.boolean(candidate);\r\n    case 'array':\r\n      return validate.array(candidate, dataType, models);\r\n    case 'void':\r\n      return validate.primitive.void(candidate);\r\n    case 'File':\r\n      return validate.primitive.file();\r\n    default:\r\n      // Assumed to be complex model\r\n      var model = models[type];\r\n      return validate.model(candidate, model, models);\r\n  }\r\n}\r\nmodule.exports = validateDataType;","'use strict';\r\n\r\nvar errorTypes = require('./errorTypes'),\r\n  ValidationError = errorTypes.ValidationError,\r\n  ValidationErrors = errorTypes.ValidationErrors,\r\n  MissingValueError = errorTypes.MissingValueError,\r\n  validate = require('./index');\r\n\r\n// http://stackoverflow.com/questions/122102/what-is-the-most-efficient-way-to-clone-an-object\r\nfunction clone(obj){\r\n    if(obj === null || obj === undefined || typeof obj !== 'object') return obj;\r\n\r\n    if(Array.isArray(obj)) return obj.slice();\r\n\r\n    var temp = {};\r\n\r\n    for(var key in obj)\r\n        temp[key] = clone(obj[key]);\r\n    return temp;\r\n}\r\n\r\nfunction addInhertiedProperties(model, modelId, models){\r\n  var parent;\r\n\r\n  Object.keys(models).some(function(modelName){\r\n    var potentialParent = models[modelName];\r\n    if (!potentialParent.subTypes) return;\r\n\r\n    if(potentialParent.subTypes.indexOf(modelId) !== -1){\r\n      parent = potentialParent;\r\n      return true;\r\n    }\r\n  });\r\n\r\n  if(!parent) return;\r\n\r\n  for(var propertyName in parent.properties){\r\n    model.properties[propertyName] = parent.properties[propertyName];\r\n  }\r\n  \r\n  if(parent.required) model.required = model.required.concat(parent.required);\r\n\r\n  addInhertiedProperties(model, parent.id, models);\r\n}\r\n\r\nfunction validateModel(candidate, model, models){\r\n  if(candidate === null || typeof candidate !== 'object'){\r\n    return new ValidationErrors(candidate, model);\r\n  }\r\n\r\n  models = models || {};\r\n\r\n  model = clone(model);\r\n  if(!model.required) model.required = [];\r\n  addInhertiedProperties(model, model.id, models);\r\n\r\n  var errors = [];\r\n\r\n  model.required.forEach(function(propertyName){\r\n    if (propertyName in candidate) return;\r\n\r\n    var property = model.properties[propertyName];\r\n    var error = new MissingValueError();\r\n    errors.push(new ValidationError(propertyName, property, error));\r\n  });\r\n\r\n  Object.keys(candidate).forEach(function(propertyName){\r\n    var property = model.properties[propertyName];\r\n\r\n    var error = validate.dataType(candidate[propertyName], property, models);\r\n    if(error){\r\n      errors.push(new ValidationError(propertyName, property, error));\r\n    }\r\n  });\r\n  \r\n  if(errors.length){\r\n    return new ValidationErrors(candidate, model.id, model, errors);\r\n  }\r\n}\r\nmodule.exports = validateModel;","'use strict';\r\n\r\nvar errorTypes = require('./errorTypes'),\r\n  ValidationError = errorTypes.ValidationError,\r\n  ValidationErrors = errorTypes.ValidationErrors,\r\n  MissingValueError = errorTypes.MissingValueError,\r\n  validate = require('./index');\r\n\r\nfunction validateOperation(candidate, operation, models){\r\n  var errors = [];\r\n  \r\n  operation.parameters.forEach(function(param){\r\n    if (!param.required) return;\r\n    if (param.name in candidate) return;\r\n\r\n    var error = new MissingValueError();\r\n    errors.push(new ValidationError(param.name, param, error));\r\n  });\r\n\r\n\r\n  Object.keys(candidate).forEach(function(paramName){\r\n    var parameter = operation.parameters.filter(function(param){\r\n      return param.name === paramName;\r\n    })[0];\r\n\r\n    var error = validate.dataType(candidate[paramName], parameter, models);\r\n    if(error){\r\n      errors.push(new ValidationError(paramName, parameter, error));\r\n    }\r\n  });\r\n  \r\n  if(errors.length){\r\n    return new ValidationErrors(candidate, operation.nickname, operation, errors);\r\n  }\r\n}\r\nmodule.exports = validateOperation;","'use strict';\r\n\r\nvar errorTypes = require('./errorTypes');\r\n\r\nfunction validateInteger(candidate, dataType){\r\n  var error = validateNumber(candidate, dataType);\r\n  if(error) return error;\r\n\r\n  if(candidate % 1){\r\n    return new errorTypes.NotAnIntegerError(candidate);\r\n  }\r\n}\r\nexports.validateInteger = validateInteger;\r\n\r\nfunction validateNumber(candidate, dataType){\r\n  if(!(typeof candidate === 'number' || candidate instanceof Number) || isNaN(candidate)){\r\n    return new errorTypes.NotANumberError(candidate, typeof candidate);\r\n  }\r\n  \r\n  if(('minimum' in dataType) && candidate < parseInt(dataType.minimum, 10)){\r\n    return new errorTypes.NumberTooSmallError(candidate, dataType.minimum);\r\n  }\r\n  \r\n  if(('maximum' in dataType) && candidate > parseInt(dataType.maximum, 10)){\r\n    return new errorTypes.NumberTooLargeError(candidate, dataType.maximum);\r\n  }\r\n}\r\nexports.validateNumber = validateNumber;\r\n\r\nfunction validateBoolean(candidate){\r\n  if(!(typeof candidate === 'boolean' || candidate instanceof Boolean)){\r\n    return new errorTypes.NotABooleanError(candidate, typeof candidate);\r\n  }\r\n}\r\nexports.validateBoolean = validateBoolean;\r\n\r\n\r\nfunction validateVoid(candidate){\r\n  if(candidate != null){\r\n    return new errorTypes.NotVoidError(candidate, typeof candidate);\r\n  }\r\n}\r\nexports.validateVoid = validateVoid;\r\n\r\nfunction validateFile(){\r\n  // Not sure how to check this, since anything could qualify as 'File'.\r\n}\r\nexports.validateFile = validateFile;\r\n\r\nfunction validateString(candidate, dataType){\r\n  if(typeof candidate !== 'string' && !(candidate instanceof String)){\r\n    return new errorTypes.NotAStringError(candidate, typeof candidate);\r\n  }\r\n\r\n  if('enum' in dataType){\r\n    if(dataType.enum.indexOf(candidate) === -1) {\r\n      return new errorTypes.StringNotInEnumError(candidate, dataType.enum);\r\n    }\r\n  }\r\n}\r\nexports.validateString = validateString;"],"sourceRoot":"/source/"}